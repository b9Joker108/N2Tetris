// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0, 0, 0, 0, 0, 0, 0] if sel == 000
 *                            [0, in, 0, 0, 0, 0, 0, 0] if sel == 001
 *                            ...
 *                            [0, 0, 0, 0, 0, 0, 0, in] if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    DMux (in=in, sel=sel[0], a=aceg, b=bdfh);
    DMux (in=in, sel=sel[1], a=abef, b=cdgh);
    DMux (in=in, sel=sel[2], a=abcd, b=efgh);

    And (a=aceg, b=abef, out=ae);
    And (a=bdfh, b=abef, out=bf);
    And (a=aceg, b=cdgh, out=cg);
    And (a=bdfh, b=cdgh, out=dh);

    ////This is unsorted Out
    // And (a=ae, b=abcd, out=a); // 000
    // And (a=bf, b=abcd, out=b); // 100
    // And (a=cg, b=abcd, out=c); // 010
    // And (a=dh, b=abcd, out=d); // 110
    // And (a=ae, b=efgh, out=e); // 001
    // And (a=bf, b=efgh, out=f); // 101
    // And (a=cg, b=efgh, out=g); // 011
    // And (a=dh, b=efgh, out=h); // 111

    //// This is sorted Out
    And (a=ae, b=abcd, out=a); // 000
    And (a=ae, b=efgh, out=e); // 001
    And (a=cg, b=abcd, out=c); // 010
    And (a=cg, b=efgh, out=g); // 011
    And (a=bf, b=abcd, out=b); // 100
    And (a=bf, b=efgh, out=f); // 101
    And (a=dh, b=abcd, out=d); // 110
    And (a=dh, b=efgh, out=h); // 111

    // This is other Logic 

    // Mux16(a=a,b=b,sel=sel[0],out=q); 
   	// Mux16(a=c,b=d,sel=sel[0],out=r);
	// Mux16(a=e,b=f,sel=sel[0],out=s); 
   	// Mux16(a=g,b=h,sel=sel[0],out=t);

	// Mux16(a=q,b=r,sel=sel[1],out=y);
	// Mux16(a=s,b=t,sel=sel[1],out=z);

	// Mux16(a=y,b=z,sel=sel[2],out=out);
}